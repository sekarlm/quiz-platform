{"remainingRequest":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/babel-loader/lib/index.js!/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sekar/Desktop/portfolio/vue/Quiz-Platform/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/src/components/QuestionBox.vue","mtime":1589418227755},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9ob21lL3Nla2FyL0Rlc2t0b3AvcG9ydGZvbGlvL3Z1ZS9RdWl6LVBsYXRmb3JtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgY3VyclF1ZXN0aW9uOiBPYmplY3QsCiAgICBuZXh0OiBGdW5jdGlvbiwKICAgIGluY3JlbWVudDogRnVuY3Rpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgc2h1ZmZsZWRBbnN3ZXJzOiBbXSwKICAgICAgY29ycmVjdEluZGV4OiBudWxsLAogICAgICBhbnN3ZXJlZDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhbnN3ZXJzOiBmdW5jdGlvbiBhbnN3ZXJzKCkgewogICAgICB2YXIgYW5zd2VycyA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmN1cnJRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2Vycyk7CgogICAgICBhbnN3ZXJzLnB1c2godGhpcy5jdXJyUXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpOwogICAgICByZXR1cm4gYW5zd2VyczsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjdXJyUXVlc3Rpb246IHsKICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBudWxsOwogICAgICAgIHRoaXMuc2h1ZmZsZUFuc3dlcigpOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RBbnN3ZXI6IGZ1bmN0aW9uIHNlbGVjdEFuc3dlcihpbmRleCkgewogICAgICB0aGlzLnNlbGVjdGVkID0gaW5kZXg7CiAgICB9LAogICAgc2h1ZmZsZUFuc3dlcjogZnVuY3Rpb24gc2h1ZmZsZUFuc3dlcigpIHsKICAgICAgdmFyIGFuc3dlcnMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuY3VyclF1ZXN0aW9uLmluY29ycmVjdF9hbnN3ZXJzKSwgW3RoaXMuY3VyclF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyXSk7CiAgICAgIHRoaXMuc2h1ZmZsZWRBbnN3ZXJzID0gXy5zaHVmZmxlKGFuc3dlcnMpOwogICAgICB0aGlzLmNvcnJlY3RJbmRleCA9IHRoaXMuc2h1ZmZsZWRBbnN3ZXJzLmluZGV4T2YodGhpcy5jdXJyUXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpOwogICAgfSwKICAgIHN1Ym1pdEFuc3dlcjogZnVuY3Rpb24gc3VibWl0QW5zd2VyKCkgewogICAgICB2YXIgaXNDb3JyZWN0ID0gZmFsc2U7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PT0gdGhpcy5jb3JyZWN0SW5kZXgpIHsKICAgICAgICBpc0NvcnJlY3QgPSB0cnVlOwogICAgICB9CgogICAgICB0aGlzLmFuc3dlcmVkID0gdHJ1ZTsKICAgICAgdGhpcy5pbmNyZW1lbnQoaXNDb3JyZWN0KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBjb25zb2xlLmxvZyh0aGlzLmN1cnJRdWVzdGlvbik7CiAgfQp9Ow=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,QAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,OAAA,sBAAA,KAAA,YAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,KAAA,YAAA,CAAA,cAAA;AACA,aAAA,OAAA;AACA;AALA,GAdA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,aAAA,QAAA,GAAA,IAAA;AACA,aAAA,aAAA;AACA;AALA;AADA,GArBA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,UAAA,OAAA,gCAAA,KAAA,YAAA,CAAA,iBAAA,IAAA,KAAA,YAAA,CAAA,cAAA,EAAA;AACA,WAAA,eAAA,GAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,eAAA,CAAA,OAAA,CAAA,KAAA,YAAA,CAAA,cAAA,CAAA;AACA,KARA;AASA,IAAA,YATA,0BASA;AACA,UAAA,SAAA,GAAA,KAAA;;AAEA,UAAA,KAAA,QAAA,KAAA,KAAA,YAAA,EAAA;AACA,QAAA,SAAA,GAAA,IAAA;AACA;;AAEA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,SAAA;AACA;AAlBA,GA9BA;AAkDA,EAAA,OAlDA,qBAkDA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,YAAA;AACA;AApDA,CAAA","sourcesContent":["<template>\n    <div>\n        <b-jumbotron>\n            <template v-slot:lead>\n            {{currQuestion.question}}\n            </template>\n\n            <hr class=\"my-4\">\n\n            <b-list-group>\n                <b-list-group-item\n                    v-for=\"(answer, index) in answers\"\n                    :key=\"index\"\n                    @click=\"selectAnswer(index)\"\n                    :class=\"[selected === index ? 'selected' : '']\"\n                >\n                    {{answer}}\n                </b-list-group-item>\n            </b-list-group>\n\n            <b-button \n            variant=\"primary\"\n            @click=\"submitAnswer\"\n            :disabled=\"selected === null && answered\"\n            >\n                Submit\n            </b-button>\n            <b-button @click=\"next\" variant=\"success\" href=\"#\">Next</b-button>\n        </b-jumbotron>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n    props: {\n        currQuestion: Object,\n        next: Function,\n        increment: Function\n    },\n    data() {\n        return {\n            selected: null,\n            shuffledAnswers: [],\n            correctIndex: null,\n            answered: null\n        }\n    },\n    computed: {\n        answers() {\n            let answers = [...this.currQuestion.incorrect_answers]\n            answers.push(this.currQuestion.correct_answer)\n            return answers\n        }\n    },\n    watch: {\n        currQuestion: {\n            immediate: true,\n            handler() {\n                this.selected = null\n                this.shuffleAnswer()\n            }\n        }\n    },\n    methods: {\n        selectAnswer(index) {\n            this.selected = index\n        },\n        shuffleAnswer() {\n            let answers = [...this.currQuestion.incorrect_answers, this.currQuestion.correct_answer]\n            this.shuffledAnswers = _.shuffle(answers)\n            this.correctIndex = this.shuffledAnswers.indexOf(this.currQuestion.correct_answer)\n        },\n        submitAnswer() {\n            let isCorrect = false\n\n            if (this.selected === this.correctIndex) {\n                isCorrect = true\n            }\n\n            this.answered = true\n            this.increment(isCorrect)\n        }\n    },\n    mounted() {\n        console.log(this.currQuestion)\n    }\n}\n</script>\n\n<style scoped>\n.list-group {\n    margin-bottom: 15px;\n}\n\n.list-group-item:hover {\n    background: #eee;\n    cursor: pointer;\n}\n\n.btn {\n    margin: 0 5px;\n}\n\n.selected {\n    background-color: lightblue;\n}\n\n.correct {\n    background-color: green;\n}\n\n.incorrect {\n    background-color: red;\n}\n</style>"],"sourceRoot":"src/components"}]}