{"remainingRequest":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sekar/Desktop/portfolio/vue/Quiz-Platform/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/src/components/QuestionBox.vue","mtime":1589374695942},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sekar/Desktop/portfolio/vue/Quiz-Platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKCmV4cG9ydCBkZWZhdWx0IHsKICAgIHByb3BzOiB7CiAgICAgICAgY3VyclF1ZXN0aW9uOiBPYmplY3QsCiAgICAgICAgbmV4dDogRnVuY3Rpb24KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHNlbGVjdGVkOiBudWxsLAogICAgICAgICAgICBzaHVmZmxlZEFuc3dlcnM6IFtdCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgYW5zd2VycygpIHsKICAgICAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyUXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnNdCiAgICAgICAgICAgIGFuc3dlcnMucHVzaCh0aGlzLmN1cnJRdWVzdGlvbi5jb3JyZWN0X2Fuc3dlcikKICAgICAgICAgICAgcmV0dXJuIGFuc3dlcnMKICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBjdXJyUXVlc3Rpb246IHsKICAgICAgICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICAgICAgICBoYW5kbGVyKCkgewogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IG51bGwKICAgICAgICAgICAgICAgIHRoaXMuc2h1ZmZsZUFuc3dlcigpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHNlbGVjdEFuc3dlcihpbmRleCkgewogICAgICAgICAgICB0aGlzLnNlbGVjdGVkID0gaW5kZXgKICAgICAgICB9LAogICAgICAgIHNodWZmbGVBbnN3ZXIoKSB7CiAgICAgICAgICAgIGxldCBhbnN3ZXJzID0gWy4uLnRoaXMuY3VyclF1ZXN0aW9uLmluY29ycmVjdF9hbnN3ZXJzLCB0aGlzLmN1cnJRdWVzdGlvbi5jb3JyZWN0X2Fuc3dlcl0KICAgICAgICAgICAgdGhpcy5zaHVmZmxlZEFuc3dlcnMgPSBfLnNodWZmbGUoYW5zd2VycykKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmN1cnJRdWVzdGlvbikKICAgIH0KfQo="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <b-jumbotron>\n            <template v-slot:lead>\n            {{currQuestion.question}}\n            </template>\n\n            <hr class=\"my-4\">\n\n            <b-list-group>\n                <b-list-group-item\n                    v-for=\"(answer, index) in answers\"\n                    :key=\"index\"\n                    @click=\"selectAnswer(index)\"\n                    :class=\"[selected === index ? 'selected' : '']\"\n                >\n                    {{answer}}\n                </b-list-group-item>\n            </b-list-group>\n\n            <b-button variant=\"primary\" href=\"#\">\n                Submit\n            </b-button>\n            <b-button @click=\"next\" variant=\"success\" href=\"#\">Next</b-button>\n        </b-jumbotron>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n    props: {\n        currQuestion: Object,\n        next: Function\n    },\n    data() {\n        return {\n            selected: null,\n            shuffledAnswers: []\n        }\n    },\n    computed: {\n        answers() {\n            let answers = [...this.currQuestion.incorrect_answers]\n            answers.push(this.currQuestion.correct_answer)\n            return answers\n        }\n    },\n    watch: {\n        currQuestion: {\n            immediate: true,\n            handler() {\n                this.selected = null\n                this.shuffleAnswer()\n            }\n        }\n    },\n    methods: {\n        selectAnswer(index) {\n            this.selected = index\n        },\n        shuffleAnswer() {\n            let answers = [...this.currQuestion.incorrect_answers, this.currQuestion.correct_answer]\n            this.shuffledAnswers = _.shuffle(answers)\n        }\n    },\n    mounted() {\n        console.log(this.currQuestion)\n    }\n}\n</script>\n\n<style scoped>\n.list-group {\n    margin-bottom: 15px;\n}\n\n.list-group-item:hover {\n    background: #eee;\n    cursor: pointer;\n}\n\n.btn {\n    margin: 0 5px;\n}\n\n.selected {\n    background-color: aquamarine;\n}\n\n.correct {\n    background-color: green;\n}\n\n.incorrect {\n    background-color: red;\n}\n</style>"]}]}